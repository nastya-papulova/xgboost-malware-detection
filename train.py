import pandas as pd
from xgboost import XGBClassifier
import pickle
import warnings
warnings.filterwarnings("ignore")


# создание фиктивных переменных из списка библиотек
def get_libs_dummies(df):
    unique_libs = set(lib for libs in df['libs'].str.split(',') for lib in libs)

    for lib in unique_libs:
        df[lib] = df['libs'].apply(lambda x: 1 if lib in x else 0)
    return df.drop(['libs', 'filename'], axis=1)


# удаление мультиколлинеарных фичей
def remove_multicollinearity(df):
    corr_matrix = df.corr()
    strong_corr_list = []

    for row_name, row in corr_matrix.iterrows():
        for column_name, value in row.items():
            if (row_name != column_name) and (row_name != 'is_virus') and (column_name != 'is_virus') and (
                    abs(value) > 0.7):
                strong_corr_list.append((row_name, column_name))

    for var1, var2 in strong_corr_list:
        if var1 not in df.columns or var2 not in df.columns:
            continue
        # остается наиболее скорелированная с таргетом фича
        if corr_matrix.loc[var1, 'is_virus'] >= corr_matrix.loc[var2, 'is_virus']:
            removed_column = var2
        else:
            removed_column = var1
        df.loc[df[removed_column] == 1, 'other'] = 1
        df.drop(removed_column, axis=1, inplace=True)
    return df


train_df = pd.read_csv('train.tsv', sep='\t')
train_df = get_libs_dummies(train_df)
train_df = remove_multicollinearity(train_df)

model = XGBClassifier()
model.fit(train_df.drop('is_virus', axis=1), train_df.is_virus)

# сохранение модели в файл
with open('model.pkl', 'wb') as file:
    pickle.dump(model, file)
